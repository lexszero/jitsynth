Мысли об архитектуре трекера.
1) Трек - структурка, хранящая состояние того, что сейчас делает трек ("играю частоту 100гц", "молчу", этц), плюс функция, которая по этому стейту вычисляет значение семпла
2) Чтоб получить суммарный семпл мы дергаем функции всех треков с аргументами из стейта трека, складываем их, изменяем стейт (инкрементируем sample)
3) Для управления трек изменяется из отдельного потока, стейт залочен только на очень маленькое время генерации семпла (сильно меньше 1/44100 секунды (чтоб укладываться в реалтайм, слава JIT, задержкой управления можно пренебречь. TODO: посмотреть чокак с буферизацией чтоб не соснуть с ней)
4) Возможно, стоит сделать s/трек/инструмент/ в вышеописанных бредах, а треком обозвать более высокоуровневую хрень, состоящую из нот.

Планы на будущее:
1) Разные виды треков, например jit-функциональный генератор и семплер
2) Семплер (как задавать семплы?)
3) Пост-процессинг (задавать функциями, благо jit-конпелять умеем, возможно потребуется какой-то буфер для хитроэффектов)
4) Сделать функциеязык чуть более человекопригодным :3
